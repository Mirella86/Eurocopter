@using EurocopterFollowUp.Model.Enums
@model EurocopterFollowUp.Model.ViewModels.ItemViewModel
@{
    Layout = "../Shared/_Layout.cshtml";
}
<!DOCTYPE html>
@{
    Html.Kendo().Window()
        .Name("window")
        .Title("Delete item")
        .Modal(true)
        .Visible(false)
        .Content(@<text>
    <div>
        Are you sure you want to delete this item? This action cannot be undone.
    </div>
    <br />
    <div class="popupDiv">
        <button class="k-button" onclick="DeleteItemConfirmed()">
            Yes</button>
        <button class="k-button" onclick="ClosePopup()">
            Cancel</button>
    </div>
    </text>).Render();

}
<script src="../../Scripts/eurocopter/add_edit_item.js" type="text/javascript"></script>
@using (Html.BeginForm())
{
    <fieldset>
        @Html.HiddenFor(item => item.Id)
        @Html.Hidden("pageName", (object)ViewBag.pageName)
        <div>
            <p>
                @(Html.Kendo().Button()
                      .Name("submit")
                      .Content("Save changes")
                      .HtmlAttributes(new { type = "submit" })
                      )
                &nbsp;
                @(Html.Kendo().Button()
                    .Name("delete")
                    .Content("Delete")
                    .HtmlAttributes(new { type = "button", onclick = "DeleteItem()" })
                   )
                &nbsp;
                @(Html.Kendo().Button()
                    .Name("cancel")
                    .Content("Back to items list")
                    .HtmlAttributes(new { type = "button", onclick = "BackToPage()" })
                   )
            </p>
        </div>
        <div class="columnDiv">
            <div class="editor-label">
                @Html.LabelFor(item => item.WO)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.WO)
                @Html.ValidationMessageFor(item => item.WO)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.WP)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.WP)
                @Html.ValidationMessageFor(item => item.WP)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.Ud)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.Ud)
                @Html.ValidationMessageFor(item => item.Ud)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.Subsystem_ECP)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.Subsystem_ECP)
                @Html.ValidationMessageFor(item => item.Subsystem_ECP)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.Issue)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.Issue)
                @Html.ValidationMessageFor(item => item.Issue)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.Installation)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.Installation)
                @Html.ValidationMessageFor(item => item.Installation)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.RPT_VCI)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.RPT_VCI)
                @Html.ValidationMessageFor(item => item.RPT_VCI)
            </div>
            <br />
        </div>
        <div class="columnDiv">
            <div class="editor-label">
                @Html.LabelFor(item => item.Indice)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.Indice)
                @Html.ValidationMessageFor(item => item.Indice)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.Designation)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.Designation)
                @Html.ValidationMessageFor(item => item.Designation)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.Type)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.Type)
                @Html.ValidationMessageFor(item => item.Type)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.TypeIU)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.TypeIU)
                @Html.ValidationMessageFor(item => item.TypeIU)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.ConfNo)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.ConfNo)
                @Html.ValidationMessageFor(item => item.ConfNo)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.Effectivity)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.Effectivity)
                @Html.ValidationMessageFor(item => item.Effectivity)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.Aircraft)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.Aircraft)
                @Html.ValidationMessageFor(item => item.Aircraft)
            </div>
            <br />
        </div>
        <div class="columnDiv">
            <div class="editor-label">
                @Html.LabelFor(item => item.DataIn)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.DataIn)
                @Html.ValidationMessageFor(item => item.DataIn)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.Deadline)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.Deadline)
                @Html.ValidationMessageFor(item => item.Deadline)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.DataOut)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.DataOut)
                @Html.ValidationMessageFor(item => item.DataOut)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.DaosDescription)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.DaosDescription)
                @Html.ValidationMessageFor(item => item.DaosDescription)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.Daos)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.Daos, new { @readonly = Roles.IsUserInRole(Enums.RoleNames.User.ToString()) ? "readonly" : "" })
                @Html.ValidationMessageFor(item => item.Daos)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.AuthorId)</div>
            <div class="editor-field">
                @if (Roles.IsUserInRole(Enums.RoleNames.User.ToString()))
                {
                    @Html.EditorFor(item => item.Author)
                }
                else
                {
                    @(Html.Kendo().DropDownList()
                          .Name("AuthorId")
                          .BindTo(ViewBag.AuthorList as SelectList)
                          .OptionLabel("Select author")
                          )
                }
                @Html.ValidationMessageFor(item => item.AuthorId)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.StatusId)</div>
            <div class="editor-field">
                @(Html.Kendo().DropDownList()
                    .Name("StatusId")
                    .BindTo(new SelectList(ViewBag.Statuses, "Id", "Name")
                    )
                )
                @Html.ValidationMessageFor(item => item.StatusId)
            </div>
            <br />
        </div>
        <div class="columnDiv">
            <div class="editor-label">
                @Html.LabelFor(item => item.Comment)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.Comment)
                @Html.ValidationMessageFor(item => item.Comment)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.ProofReaderId)</div>
            <div class="editor-field">
                @if (Roles.IsUserInRole(Enums.RoleNames.User.ToString()))
                {
                    @Html.EditorFor(item => item.ProofReader)
                }
                else
                {
                    @(Html.Kendo().DropDownList().Name("ProofReaderId")
                          .BindTo(ViewBag.ProofReaderList as SelectList)
                          .OptionLabel("Select proofreader")
                          )
                }
                @Html.ValidationMessageFor(item => item.ProofReaderId)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.AuthoringPercent)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.AuthoringPercent) %
                @Html.ValidationMessageFor(item => item.AuthoringPercent)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.CrossCheckPercent)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.CrossCheckPercent) %
                @Html.ValidationMessageFor(item => item.CrossCheckPercent)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.FinalPercent)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.FinalPercent) %
                @Html.ValidationMessageFor(item => item.FinalPercent)
            </div>
            <br />
            <div class="editor-label">
                @Html.LabelFor(item => item.Figure)</div>
            <div class="editor-field">
                @Html.EditorFor(item => item.Figure) %
                @Html.ValidationMessageFor(item => item.Figure)
            </div>
            <br />
        </div>
    </fieldset>
}
